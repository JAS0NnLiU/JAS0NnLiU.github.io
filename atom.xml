<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jason</title>
  
  <subtitle>Never too late to learn.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-07-23T10:14:47.403Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jason</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Easypan2</title>
    <link href="http://example.com/2024/07/23/Easypan2/"/>
    <id>http://example.com/2024/07/23/Easypan2/</id>
    <published>2024-07-23T10:14:28.000Z</published>
    <updated>2024-07-23T10:14:47.403Z</updated>
    
    
    <summary type="html">随机验证码和邮件发送接口的实现</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="Project" scheme="http://example.com/categories/Java/Project/"/>
    
    
    <category term="Easypan" scheme="http://example.com/tags/Easypan/"/>
    
  </entry>
  
  <entry>
    <title>Easypan | ①</title>
    <link href="http://example.com/2024/07/20/Easypan1/"/>
    <id>http://example.com/2024/07/20/Easypan1/</id>
    <published>2024-07-20T12:49:24.000Z</published>
    <updated>2024-07-23T10:02:23.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、随机验证码生成接口实现"><a href="#一、随机验证码生成接口实现" class="headerlink" title="一、随机验证码生成接口实现"></a>一、随机验证码生成接口实现</h1><p>注册新账号接口中，用户凭借邮箱进行注册。为了防止恶意注册和暴力破解，通过生成随机图片验证码，并且在验证码正确后才能发送邮件进行注册。</p><p>CreateImageCode类：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CreateImageCode</span> {</span><br><span class="line">    <span class="comment">// 图片的宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> <span class="number">160</span>;</span><br><span class="line">    <span class="comment">// 图片的高度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line">    <span class="comment">// 验证码字符个数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">codeCount</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">    <span class="comment">// 验证码干扰线数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">lineCount</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// 验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 验证码图片Buffer</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">BufferedImage</span> <span class="variable">buffImg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CreateImageCode</span><span class="params">()</span> {</span><br><span class="line">        creatImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CreateImageCode</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height)</span> {</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">        creatImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CreateImageCode</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span> codeCount)</span> {</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">        <span class="built_in">this</span>.codeCount = codeCount;</span><br><span class="line">        creatImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CreateImageCode</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height, <span class="type">int</span> codeCount, <span class="type">int</span> lineCount)</span> {</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">        <span class="built_in">this</span>.height = height;</span><br><span class="line">        <span class="built_in">this</span>.codeCount = codeCount;</span><br><span class="line">        <span class="built_in">this</span>.lineCount = lineCount;</span><br><span class="line">        creatImage();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成图片</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">creatImage</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">fontWidth</span> <span class="operator">=</span> width / codeCount;<span class="comment">// 字体的宽度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">fontHeight</span> <span class="operator">=</span> height - <span class="number">5</span>;<span class="comment">// 字体的高度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">codeY</span> <span class="operator">=</span> height - <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 图像buffer</span></span><br><span class="line">        buffImg = <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="type">Graphics</span> <span class="variable">g</span> <span class="operator">=</span> buffImg.getGraphics();</span><br><span class="line">        <span class="comment">//Graphics2D g = buffImg.createGraphics();</span></span><br><span class="line">        <span class="comment">// 设置背景色</span></span><br><span class="line">        g.setColor(getRandColor(<span class="number">200</span>, <span class="number">250</span>));</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">// 设置字体</span></span><br><span class="line">        <span class="comment">//Font font1 = getFont(fontHeight);</span></span><br><span class="line">        <span class="type">Font</span> <span class="variable">font</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Fixedsys"</span>, Font.BOLD, fontHeight);</span><br><span class="line">        g.setFont(font);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置干扰线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; lineCount; i++) {</span><br><span class="line">            <span class="type">int</span> <span class="variable">xs</span> <span class="operator">=</span> random.nextInt(width);</span><br><span class="line">            <span class="type">int</span> <span class="variable">ys</span> <span class="operator">=</span> random.nextInt(height);</span><br><span class="line">            <span class="type">int</span> <span class="variable">xe</span> <span class="operator">=</span> xs + random.nextInt(width);</span><br><span class="line">            <span class="type">int</span> <span class="variable">ye</span> <span class="operator">=</span> ys + random.nextInt(height);</span><br><span class="line">            g.setColor(getRandColor(<span class="number">1</span>, <span class="number">255</span>));</span><br><span class="line">            g.drawLine(xs, ys, xe, ye);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加噪点</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">yawpRate</span> <span class="operator">=</span> <span class="number">0.01f</span>;<span class="comment">// 噪声率</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">area</span> <span class="operator">=</span> (<span class="type">int</span>) (yawpRate * width * height);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; area; i++) {</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> random.nextInt(width);</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> random.nextInt(height);</span><br><span class="line">            buffImg.setRGB(x, y, random.nextInt(<span class="number">255</span>));</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> randomStr(codeCount);<span class="comment">// 得到随机字符</span></span><br><span class="line">        <span class="built_in">this</span>.code = str1;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; codeCount; i++) {</span><br><span class="line">            <span class="type">String</span> <span class="variable">strRand</span> <span class="operator">=</span> str1.substring(i, i + <span class="number">1</span>);</span><br><span class="line">            g.setColor(getRandColor(<span class="number">1</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="comment">// g.drawString(a,x,y);</span></span><br><span class="line">            <span class="comment">// a为要画出来的东西，x和y表示要画的东西最左侧字符的基线位于此图形上下文坐标系的 (x, y) 位置处</span></span><br><span class="line"></span><br><span class="line">            g.drawString(strRand, i * fontWidth + <span class="number">3</span>, codeY);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到随机字符</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">randomStr</span><span class="params">(<span class="type">int</span> n)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> str1.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="type">double</span> r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            r = (Math.random()) * len;</span><br><span class="line">            str2 = str2 + str1.charAt((<span class="type">int</span>) r);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> str2;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到随机颜色</span></span><br><span class="line">    <span class="keyword">private</span> Color <span class="title function_">getRandColor</span><span class="params">(<span class="type">int</span> fc, <span class="type">int</span> bc)</span> {<span class="comment">// 给定范围获得随机颜色</span></span><br><span class="line">        <span class="keyword">if</span> (fc &gt; <span class="number">255</span>) fc = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (bc &gt; <span class="number">255</span>) bc = <span class="number">255</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="type">int</span> <span class="variable">g</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> fc + random.nextInt(bc - fc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Color</span>(r, g, b);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 产生随机字体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Font <span class="title function_">getFont</span><span class="params">(<span class="type">int</span> size)</span> {</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        Font font[] = <span class="keyword">new</span> <span class="title class_">Font</span>[<span class="number">5</span>];</span><br><span class="line">        font[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Ravie"</span>, Font.PLAIN, size);</span><br><span class="line">        font[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Antique Olive Compact"</span>, Font.PLAIN, size);</span><br><span class="line">        font[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Fixedsys"</span>, Font.PLAIN, size);</span><br><span class="line">        font[<span class="number">3</span>] = <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Wide Latin"</span>, Font.PLAIN, size);</span><br><span class="line">        font[<span class="number">4</span>] = <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">"Gill Sans Ultra Bold"</span>, Font.PLAIN, size);</span><br><span class="line">        <span class="keyword">return</span> font[random.nextInt(<span class="number">5</span>)];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扭曲方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">shear</span><span class="params">(Graphics g, <span class="type">int</span> w1, <span class="type">int</span> h1, Color color)</span> {</span><br><span class="line">        shearX(g, w1, h1, color);</span><br><span class="line">        shearY(g, w1, h1, color);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">shearX</span><span class="params">(Graphics g, <span class="type">int</span> w1, <span class="type">int</span> h1, Color color)</span> {</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">period</span> <span class="operator">=</span> random.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">borderGap</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">frames</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">phase</span> <span class="operator">=</span> random.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; h1; i++) {</span><br><span class="line">            <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> (<span class="type">double</span>) (period &gt;&gt; <span class="number">1</span>) * Math.sin((<span class="type">double</span>) i / (<span class="type">double</span>) period + (<span class="number">6.2831853071795862D</span> * (<span class="type">double</span>) phase) / (<span class="type">double</span>) frames);</span><br><span class="line">            g.copyArea(<span class="number">0</span>, i, w1, <span class="number">1</span>, (<span class="type">int</span>) d, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) {</span><br><span class="line">                g.setColor(color);</span><br><span class="line">                g.drawLine((<span class="type">int</span>) d, i, <span class="number">0</span>, i);</span><br><span class="line">                g.drawLine((<span class="type">int</span>) d + w1, i, w1, i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">shearY</span><span class="params">(Graphics g, <span class="type">int</span> w1, <span class="type">int</span> h1, Color color)</span> {</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">period</span> <span class="operator">=</span> random.nextInt(<span class="number">40</span>) + <span class="number">10</span>; <span class="comment">// 50;</span></span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">borderGap</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">frames</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">phase</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; w1; i++) {</span><br><span class="line">            <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> (<span class="type">double</span>) (period &gt;&gt; <span class="number">1</span>) * Math.sin((<span class="type">double</span>) i / (<span class="type">double</span>) period + (<span class="number">6.2831853071795862D</span> * (<span class="type">double</span>) phase) / (<span class="type">double</span>) frames);</span><br><span class="line">            g.copyArea(i, <span class="number">0</span>, <span class="number">1</span>, h1, <span class="number">0</span>, (<span class="type">int</span>) d);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) {</span><br><span class="line">                g.setColor(color);</span><br><span class="line">                g.drawLine(i, (<span class="type">int</span>) d, i, <span class="number">0</span>);</span><br><span class="line">                g.drawLine(i, (<span class="type">int</span>) d + h1, i, h1);</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(OutputStream sos)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        ImageIO.write(buffImg, <span class="string">"png"</span>, sos);</span><br><span class="line">        sos.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BufferedImage <span class="title function_">getBuffImg</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> buffImg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code.toLowerCase();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Controller层：</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping("/checkCode")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkCode</span><span class="params">(HttpServletResponse response, HttpSession session, Integer type)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line"><span class="comment">//生成验证码图片</span></span><br><span class="line"><span class="type">CreateImageCode</span> <span class="variable">vCode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CreateImageCode</span>(<span class="number">130</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">//设置响应头部信息，禁止浏览器缓存生成的图片</span></span><br><span class="line">response.setHeader(<span class="string">"Pragma"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Cache-Control"</span>, <span class="string">"no-cache"</span>);</span><br><span class="line">response.setDateHeader(<span class="string">"Expires"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//设置响应的内容类型为 "image/jpeg"，指示响应是一个 JPEG 格式的图片</span></span><br><span class="line">response.setContentType(<span class="string">"image/jpeg"</span>);</span><br><span class="line"><span class="comment">// 获取生成的验证码字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> vCode.getCode();</span><br><span class="line"><span class="comment">// 将验证码根据 type 参数存储到 HttpSession 对象中 type = 0 代表注册</span></span><br><span class="line"><span class="keyword">if</span> (type == <span class="literal">null</span> || type == <span class="number">0</span>) {</span><br><span class="line">session.setAttribute(Constants.CHECK_CODE_KEY, code);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">session.setAttribute(Constants.CHECK_CODE_KEY_EMAIL, code);</span><br><span class="line">}</span><br><span class="line"><span class="comment">// 将生成的验证码图片写入响应的输出流，返回给客户端</span></span><br><span class="line">vCode.write(response.getOutputStream());</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>注意：</p><p>设置响应头部信息，禁止浏览器缓存生成的图片，防止了浏览器在加载验证码图片的时候，直接调用缓存图片，而刷新不出来新的图片的问题。</p><p><strong>前端浏览器为了避免不断的访问服务器而造成性能压力，他会把同路径的图片缓存下来，这样下一次访问的时候就不需要服务器请求资源。在图片验证码地址后附加时间参数，构造出唯一的地址参数。</strong></p><img src="/2024/07/20/Easypan1/02562de02d39489c9a61004097a57826.png" class="" title="img"><img src="/2024/07/20/Easypan1/image-20240723165755521.png" class="" title="image-20240723165755521"><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping("/sendEmailCode")</span></span><br><span class="line"><span class="meta">@GlobalInterceptor(checkLogin = false, checkParams = true)</span></span><br><span class="line"><span class="keyword">public</span> ResponseVO <span class="title function_">sendEmailCode</span><span class="params">(HttpSession session,</span></span><br><span class="line"><span class="params">                         <span class="meta">@VerifyParam(required = true, regex = VerifyRegexEnum.EMAIL, max = 150)</span> String email,</span></span><br><span class="line"><span class="params">                         <span class="meta">@VerifyParam(required = true)</span> String checkCode,</span></span><br><span class="line"><span class="params">                         <span class="meta">@VerifyParam(required = true)</span> Integer type)</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="comment">//校验用户输入的验证码和session中的验证码是否一致</span></span><br><span class="line">       <span class="keyword">if</span>(!checkCode.equalsIgnoreCase((String) session.getAttribute(Constants.CHECK_CODE_KEY_EMAIL))) {</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="string">"图片验证码不正确"</span>);</span><br><span class="line">       }</span><br><span class="line">       <span class="comment">//发送邮箱验证码</span></span><br><span class="line">       emailCodeService.sendEmailCode(email, type);</span><br><span class="line">       <span class="keyword">return</span> getSuccessResponseVO(<span class="literal">null</span>);</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">       <span class="comment">//删掉原有的验证码，避免被重复使用</span></span><br><span class="line">       session.removeAttribute(Constants.CHECK_CODE_KEY_EMAIL);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="二、邮件发送接口实现"><a href="#二、邮件发送接口实现" class="headerlink" title="二、邮件发送接口实现"></a>二、邮件发送接口实现</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendEmailCode</span><span class="params">(String email, Integer type)</span> {</span><br><span class="line">    <span class="comment">//如果是注册，校验邮箱是否已存在</span></span><br><span class="line">    <span class="keyword">if</span> (type == Constants.ZERO) {</span><br><span class="line">       <span class="type">UserInfo</span> <span class="variable">userInfo</span> <span class="operator">=</span> userInfoMapper.selectByEmail(email);</span><br><span class="line">       <span class="keyword">if</span> (<span class="literal">null</span> != userInfo) {</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="string">"邮箱已经存在"</span>);</span><br><span class="line">       }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//生成随机的五位邮箱验证码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> StringTools.getRandomNumber(Constants.LENGTH_5);</span><br><span class="line">    <span class="comment">//发送验证码</span></span><br><span class="line">    sendMailCode(email, code);</span><br><span class="line">    <span class="comment">//将之前的验证码置为无效</span></span><br><span class="line">    emailCodeMapper.disableEmailCode(email);</span><br><span class="line">    <span class="comment">//将本次注册信息插入到数据库</span></span><br><span class="line">    <span class="type">EmailCode</span> <span class="variable">emailCode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmailCode</span>();</span><br><span class="line">    emailCode.setCode(code);</span><br><span class="line">    emailCode.setEmail(email);</span><br><span class="line">    emailCode.setStatus(Constants.ZERO);</span><br><span class="line">    emailCode.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    emailCodeMapper.insert(emailCode);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendMailCode</span><span class="params">(String toEmail, String code)</span> {</span><br><span class="line">    <span class="keyword">try</span>{</span><br><span class="line">       <span class="comment">//构造一份邮件</span></span><br><span class="line">       <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line">       <span class="comment">//辅助设置MimeMessage的属性</span></span><br><span class="line">       <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message, <span class="literal">true</span>);</span><br><span class="line">       <span class="comment">//设置发件人、收件人</span></span><br><span class="line">       helper.setFrom(appConfig.getSendUserName());</span><br><span class="line">       helper.setTo(toEmail);</span><br><span class="line">       <span class="comment">//获取redis中的邮件对象</span></span><br><span class="line">       <span class="type">SysSettingsDto</span> <span class="variable">sysSettingsDto</span> <span class="operator">=</span> redisComponent.getSysSettingDto();</span><br><span class="line">       <span class="comment">//邮件主题</span></span><br><span class="line">       helper.setSubject(sysSettingsDto.getRegisterMailTitle());</span><br><span class="line">       <span class="comment">//邮件内容</span></span><br><span class="line">       helper.setText(String.format(sysSettingsDto.getRegisterEmailContent(), code));</span><br><span class="line">       <span class="comment">//邮件发送时间</span></span><br><span class="line">       helper.setSentDate(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">       javaMailSender.send(message);</span><br><span class="line">    }<span class="keyword">catch</span> (Exception e) {</span><br><span class="line">       logger.error(<span class="string">"邮件发送失败"</span>,e);</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="string">"邮件发送失败"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>disableEmailCode的xml:</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"disableEmailCode"</span>&gt;</span></span><br><span class="line">    update email_code</span><br><span class="line">    set status = 1 where email = #{email} and status = 0;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">随机验证码和邮件发送接口的实现</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="Project" scheme="http://example.com/categories/Java/Project/"/>
    
    
    <category term="Easypan" scheme="http://example.com/tags/Easypan/"/>
    
  </entry>
  
</feed>
